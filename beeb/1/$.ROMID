      $START \ **************************************************** \ *            ROMID reader/copier                   * \ *            V5 18/9/84 IJW                        * \ *            Syntax- *ROMID page addr              * \ ****************************************************.Null=&90.Rom=&91.Entry=&92.RomOffset=&93.WORK3=&900.STACK=&7C0.'ROMID  JSR OSNEWL LDA #170 LDX #0 LDY #&FF JSR OSBYTE \Get addr of Rom table STX &F8 STY &F9 \Check if page#/address given PLA PHA TAY \Oscli offset JSR Nextoscl BEQ idroms \CR only JSR HEXBIN \Convert page# BEQ done \CR no address BCC done \Illegal hex LDX &AE \Result CPX #&10 BCS done \Illegal page#>15 STX Rom CMP #"O" \Check ON/OFF BNE RomAddr JSR Skposcl CMP #"N" BEQ Rom_on LDA #0 \0=off BEQ Set_table.Rom_on LDA#6 STA &F6 LDA #&80 STA &F7 LDY Rom JSR &FFB9 \Get Rom type .Set_table LDY Rom STA (&F8),Y \Set Rom type in table .idroms JSR romid.done JMP Alldone .RomAddr JSR HEXBIN \Convert address BCC idroms \Illegal address LDA &AF \Addr MSB CMP #&E BCC idroms \If address<E00 illegal STA &AB LDA &AE STA &AA \Save address LDA #0 STA &F6 LDA #&80 STA Null STA &F7 \Set (F6) to &8000.move LDY Rom JSR &FFB9 \Get (F6) of rom Y CMP (&F6),Y \=this rom? BEQ m2 STY Null \Y=0, clear if any bytes<>.m2 STA (&AE),Y \Y=0 INC &AE BNE @E+4 INC &AF INC &F6 BNE move LDY Null \if<>0 first 256 bytes BNE loaded \=this rom! INC &F7 LDA &F7 CMP #&C0 BCC move.loaded JSR Printmsg $EQUB 13 $EQUS " *SAVE " $EQUB 0 LDY #9.name LDA (&AA),Y \Rom name BMI save CMP #33 \No spaces or ctrl chrs BCC save JSR OSWRCH INY CPY #&10 BCC name.save JSR Space1 LDA &AB JSR Hex_asci \Print save addr in hex LDA &AA JSR Hex_asci JSR Printmsg $EQUS " +" $EQUB 0 \Check if 8 or 16K image LDA &AA STA &AE LDA &AB CLC ADC #&20 \Add 8K STA &AF LDY #0.Find LDA (&AA),Y CMP(&AE),Y BNE K16 INY BNE Find \Check first 256.K8 LDA #"2" BNE K.K16 LDA #"4".K JSR OSWRCH JSR Printmsg $EQUS "000 " $EQUB 0 LDA &FFFD JSR Hex_asci LDA &FFFC \Print reset address JSR Hex_asci JSR Printmsg \Reload address $EQUS " 8000" $EQUB 13 $EQUB 0 JMP Alldone \ *******************************.romid LDA #15 STA Rom.Nextrom LDA Rom TAY JSR Nybble \Print Rom page LDX #"-" LDA (&F8),Y \Rom type BNE valid LDX #&20 \Space if ROM not on.valid TXA JSR OSWRCH LDA #&80 STA &F7 \(F6)points to (C) offset JSR Checkrom BNE NOROM \Not valid image JSR Print_Rom_Id.NOROM JSR Curpos BEQ NOROM2 JSR OSNEWL.NOROM2 DEC Rom BPL Nextrom \Do roms 15-0 RTS\ **********************************.Checkrom LDA #7 STA &F6 JSR Getbyte \Get byte (F6) of Rom Y STA &F6 \(F6) now points to 0(C) \Check if rom exists/valid LDX #4.Chk STX Null JSR Getbyte LDX Null CMP Copy-1,X BNE Notrom INC &F6 DEX BNE Chk \Check 4 bytes.Notrom RTS \Z=1 if good rom.Copy $EQUS ")C(" $EQUB 0 \ *******************************.Print_Rom_Id LDA #8 STA &F6 \Point to Version# JSR Getbyte JSR Hex_asci \Print version# JSR Space1 LDY #3 STY Null \Allow 3 nulls in name.Get INC &F6 JSR Curpos BEQ PRI2 \End of line JSR Getbyte CMP #127 BCS Skip CMP #32 BCC Skip JSR OSWRCH.Skip CMP #0 BNE Get JSR Space1 DEC Null BNE Get.PRI2 RTS.Curpos LDA #134 JSR OSBYTE \Read cursor XY CPX #0 RTS.Getbyte LDY Rom BMI Ram \Only 0-F are Rom#'s JMP &FFB9 \Get byte (F6) of Rom Y.Ram LDY #0 LDA (&F6),Y RTS$END