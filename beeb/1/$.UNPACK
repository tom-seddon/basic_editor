$START\ **********************************\ *                                *\ * UNPACK, DECONCATENATES BASIC   *\ *                                *\ **********************************.Colon_count=&82.Extra=&83.Length=&84.Pass=&85.Concatflg=&86.Renmsg=&87.Quotes=&8B.Source=&A8 \Move pointers.Destin=&AA.Extent=&AC.'UNCONCAT LDX#0 STX Renmsg DEX \=FF STX Pass \FF=First STX Highlight STX Lineend \Set list options.PASS JSR Start \(Addr)=PAGE BEQ Line.Line_end \Leave line alone JSR Nextline .Line LDY#1 STY Concatflg LDA (Addr),Y \Line# msb STA &2B STA &2D ORA &FF \Escaped or TOP? BPL L2 JMP K.L2 INY LDA (Addr),Y \Line# lsb STA &2A STA &2C INY LDA (Addr),Y \Length STA Length \CMP #7 \BCC Line_end LDA #0 STA Colon_count.Ldspc INY LDA (Addr),Y \First byte CMP#32 \Ignore leading spaces BEQ Ldspc CMP #"*" \OS cmnd? BEQ Line_end CMP #&DC \DATA? BEQ Line_end LDY #3 LDX #3.D LDA #0 STA Quotes.E INY INX BEQ Toolong LDA (Addr),Y STA &6FC,X \Build new line text CMP #&D \CR? BEQ CR BIT Quotes BPL F \Not inside "" CMP#&22 \Quote? BNE E \Find closing quote or CR BEQ D.F CMP #&E7 \IF? BEQ rest CMP #&F4 \REM? BEQ rest CMP #&85 \ERROR? BNE Lineno.rest PHA LDA#&FF STA Concatflg \-ve=off PLA .Lineno CMP #&8D \Line#? BNE G LDA #3 STA Temp.Ln INY \Skip line# INX BEQ Toolong LDA (Addr),Y STA &6FC,X DEC Temp BNE Ln BEQ E.Toolong JMP Line_end \Cant expand line.G CMP #&22 \Quote? BNE H DEC Quotes \-ve = on BNE E.H CMP #":" \Colon? BNE notcolon BIT Concatflg BMI E \leave colons alone CPY #4 \First byte of line? BEQ E INC Colon_count BIT Pass BMI E \First pass LDA #3 \4 extra bytes inc colon.Un JSR Unpack \Form new line JMP Line.CR BIT Pass BMI cr2 \First pass -ve LDA #0 \No extra bytes needed BEQ Un \Deal with line on 2nd pass.cr2 STY Temp JSR Nextline LDA Colon_count BEQ J \No colons LDY Temp CPY #7 BCC J \Only 1 or 2 bytes on line JSR Check_room.J JMP Line \Next line.notcolon STX Temp CMP #"0" BCC nospace CMP #&3A BCC spc CMP #"@" BCC nospace.Ig LDX #6.Ign CMP Ignore,X \Check token( BEQ nospace DEX BPL Ign.spc INY LDA (Addr),Y \Next byte BPL nospc \Not Token LDA #32 INC Temp LDX Temp BEQ Toolong STA &6FC,X \Insert space.nospc DEY.nospace LDX Temp JMP E.Ignore $EQUB &A7 \INSTR( $EQUB &C0 \LEFT$( $EQUB &C1 \MID$( $EQUB &B0 \POINT( $EQUB &C2 \RIGHT$( $EQUB &C4 \STRING$( $EQUB &8A \TAB( .K BIT &FF BMI M \Escaped BIT Renmsg BMI M \Set, cant unpack INC Pass BNE M \Alldone JMP PASS \ 2nd pass.M JSR OSNEWL JSR Update_Basic JMP Choice \Alldone\ **********************************.Check_room LDY #1 LDA (Addr),Y \Next line# msb BMI Ok \TOP, no problem LDA &2A CLC ADC Colon_count TAX LDA &2B ADC #0 CMP (Addr),Y \Nextline# msb BCC Ok TXA \lsb of required line# INY CMP (Addr),Y BCS Cant \No room to expand.Ok LDA &2B CMP#&7F \Max line# yet? BNE Rtn LDA &2A CMP #&FF BNE Rtn \All ok.Cant BIT Renmsg BMI prntd \Mssg already printed DEC Renmsg JSR Printmsg $EQUB 13 $EQUS " Renumber line(s):" $EQUB 13 $EQUB 0.prntd LDA #8 \Field width 8 JSR IACOUTA \Print line# in 2A/B.Rtn RTS\ **********************************.Unpack\Make a new line and line#\Text at 700..\X=line length inc overheads\ & spaces STA Extra STY Temp LDA #13 STA &6FC,X \Insert CR LDY #3 TXA STA (Addr),Y \New length  TYA \Set up move pointers SEC \+1 to skip colon ADC Addr STA Source LDA Addr+1 ADC #0 STA Source+1  TXA SEC SBC Temp \=Y CLC ADC Extra \0 or 4 TAX \Extra bytes in line CLC ADC Source STA Destin LDA Source+1 ADC #0 STA Destin+1 LDA &12 \TOP SEC SBC Source STA Extent LDA &13 \TOP msb SBC Source+1 STA Extent+1 TXA CLC ADC &12 \TOP lsb TAY LDA &13 \TOP msb ADC #0 CMP RAMTOP \Bottom of Screen ? BCC U2 JMP Noroom.U2 STA &13 \New TOP msb STY &12 \lsb JSR Blockmove \Move rest of prog up  LDY #4 LDX #4.Newl LDA &6FC,X STA (Addr),Y \Insert expanded line INY INX CMP #13 BNE Newl JSR Listline \JSR Iachi_lo \Restore Line# JSR Nextline \(Addr) now = new CR \Update line# of rest of line LDA Extra BEQ oldline \No new line# rqd LDA Length \of original line SEC SBC Temp \Bytes in new fragment CLC ADC #3 \Extra overheads LDY #3 STA (Addr),Y \remaining length DEY \=2 LDA &2C \Line# lsb CLC ADC #1 STA (Addr),Y DEY \=1 LDA &2D ADC #0 STA (Addr),Y \Line# Msb.oldline RTS.Noroom JSR Printmsg $EQUB 13 $EQUB 13 $EQUB 7 $EQUS "No room" $EQUB 0 JMP M \Quit.'Update_Basic \UPDATE TOP,LOMEM,VARTOP JSR Start.UB1 LDY#1 LDA (Addr),Y BMI UB2 \TOP JSR Nextline JMP UB1.UB2 LDA Addr CLC ADC#2 STA &12 \TOP STA &00 \LOMEM STA &02 \VARTOP LDA Addr+1 ADC#0 STA &13 STA &01 STA &03 RTS$END