OC27,79TS3HP1DHce OC27,80,27,15Super Utility IV Instructions - Basic Editoroc27,77JOOC27,77LL69LM10EPOC128,3,2"*BASED"OC27,45,1,27,33,0,27,69BASIC EDITOR:OC27,45,0,27,33,1 An editor for BASIC programs directly in their 'tokenised' form in memory.OC27,33,0,27,69Abbreviation: *BOC27,33,1 (Note no period after B)OC27,45,1,27,71MenuOC27,45,0,27,72    Most routines are shown in the menu displayed on entering the editor:- E Enter Search$ L List matches N Number matches G Global Replace S Selective Replace B Bad Program relink C Copy F Format listing M Move P Pack R Renumber T Table line references U Unpack V Variables Xref Search$: Ready_Routines are selected by entering the initial letter at the Ready prompt. Further facilities not included in the menu are:-        @ - List entire program.        H - How many matches.        K - Keyboard immediate mode.        Q - Quit Editor Ctrl B/C - Printer On/Off. Ctrl L   - List match lines, no colour. Ctrl N/O - Paged mode On/Off.Any invalid key redisplays the menu.Most routines can be Escaped from and return to the Ready prompt.bpoc27,45,1To Leave:oc27,45,0 the Editor and return to Basic, use Escape or Q at the Ready prompt.oc27,45,1Printer:oc27,45,0  Output can be sent to a printer, controlled by CtrlB/C as normal. Displaying the menu also turns the printer stream off.oc27,45,1Paged mode:OC27,45,0 is selected by CtrlN/O as normal. Displaying the menu clears paged mode.oc27,45,1Exec files:oc27,45,0 Editor instructions can be taken from an Exec file by adding E to the editor call, ie. *B E or *BASED E. This prevents the editor from flushing the input buffer before every prompt.oc27,45,1Program:oc27,45,0 The editor works on the current program in memory as defined by PAGE.bpPC\OC27,45,1,27,71,27,80ROUTINESoc27,77 OC27,45,0,27,72OC27,45,1,27,71E Enter Search$oc27,45,0,27,72 Routines L,N,G,S,H all require a search string to be input first. The search string may be up to 80 characters and after input it is tokenised in the same way as normal BASIC program lines. This means that Basic reserved words must be entered in full or in their proper abbreviated form, ie to find PRINT\X% the input is either PRINT\X% or P.\X% ,  but not NT\X% or similar. Embedded character codes >&7F (Teletext control etc.) are input via the normal shift/ctrl function keys. Control codes (ASCI 3 to 31) can be entered by the normal Ctrl-Key, as they are not executed on input. This allows CtrlU to be entered but it cannot be used to delete the input line. Control codes are shown by |U or |G etc. (See later section on special syntaxes that use Ctrl@/A/B as wildcards).Escape during input abandons the new line and leaves the previous search$ as the current one.After entering a search$ the current program is searched for any matches with the new search$ and the number of matches is then displayed. A recount can be done at any time by using "H" (How many), and is done automatically every time the menu is displayed.oc27,45,1,27,71L List match linesoc27,45,0,27,72 This is a selective list function. All lines containing the search$ are listed (in LISTO1 format) with the search$ highlighted in each case.To list without the highlighting use CtrlL.ESCAPE before the prompt reappears will stop the listing. ESCAPE or Q at the prompt exits the editor, thus allowing normal screen editing on the listed lines, (also see section on Keyboard mode "K").Select paged mode to prevent lines scrolling off screen.  Typical uses of this function might be to find all calls of a specific PROCEDURE or FUNCTION, or all uses of a  particular variable. Using DEF as the search$ will list all the FN/PROC definition lines. Using '.' as the search$ will list all labels in assembler listings, etc..etc...oc27,45,1,27,71N Number match linesoc27,45,0,27,72Prints out the line numbers of all program lines that include the search$. A line number is only shown once, no matter how many occurrences it contains.bpOC27,45,1,27,71G Global Replaceoc27,45,0oc27,45,1S Selective Replaceoc27,45,0,27,72These commands allow a search$ to be automatically replaced by another different string, the Replace$. This may be longer or shorter than the original search$, or non-existent (deletion). The replace$ is tokenised in the same way as the search$ and may be up to 80 characters long.oc27,71SELECTIVEoc27,72 replacement lists every line concerned and highlights the string to be replaced. A prompt 'Replace? Y/N:' is given. Any key except Y means NO, and the next replacement will be listed. Y for YES will cause the replace$ to be inserted into the program instead of the search$.oc27,71GLOBALoc27,72 replacement will replace every occurrence of the search$ without asking every time. For this reason don't use global unless you are very sure that you mean EVERY occurrence; check using "L" above first. oc27,71DELETIONoc27,72 using Replace functions: If the replace$ is nonexistent then it effectively deletes the search$ from the relevent lines. An extension to this facility is that lines may be deleted up to the search$ from the left, or from the search$ to the end of the line.A "oc27,42,5,9,0,0,8,28,42,8,8,8,8,8" as the first character of a replace$, ([ on keyboard), deletes the line from the beginning upto and including the search$. If the search$ is included in the replace$ then it is a delete exclusive of the search$.  If the last character of the replace$ is "oc27,42,5,9,0,0,8,8,8,8,8,42,28,8" all the line from the search$ up to the end of the line will be deleted.Summary: (S$ means Search string)ÝReplace$Ý Result(i)Ýoc27,42,5,9,0,0,8,28,42,8,8,8,8,8Ý ÝDelete line up to and including search$.(ii)Ýoc27,42,5,9,0,0,8,28,42,8,8,8,8,8S$ÝDelete line up to search$.(iii)Ýoc27,42,5,9,0,0,8,8,8,8,8,42,28,8Ý ÝDelete line from start of search$ to end.(iv)ÝS$OC27,42,5,9,0,0,8,8,8,8,8,42,28oc8ÝDelete line from end of search$ to end of line.(v)Ýoc27,42,5,19,0,0,8,28,42,8,8,8,8,8oc0,0,8,8,8,8,8,42,28,8Ý        Delete entire line.Example: Remove all REMs from program:         Search$=  REM         Replace$= oc27,42,5,9,0,0,8,8,8,8,8,42,28,8oc27,71WILDCARDSoc27,72 in the Replace$:If any of the wildcards (ctrl@,A,B) are included in the Replace$ they form a window on to the corresponding byte in the search$, which will then appear in the final modified text, ie:       Search$  TAB(OC27,42,5,9,0,255,255,255,255,255OC255,255,0,0,6) Matching text  TAB(9,6)      Replace$  TAB(oc27,42,5,9,0,255,255,255,255,255oc255,255,0,0,,8)Resulting text  TAB(9,8)Note that "corresponding" means at the same byte position, so if the replace$ is different in length to the search$ take great care using wildcards in the Replace$.