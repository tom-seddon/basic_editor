$START\ *********************************\ * Function Keys Lister          *\ * Modded 7/86 for MASTER SERIES *\ *********************************.'FKEYS JSR Nextoscl BEQ All \CR, show all keys LDX #&AD \Result address JSR DECBIN BCS Keyok.Badkey JSR Errorexit $EQUB 251 $EQUS "Bad key" $EQUB 0.Keyok LDX &AD CPX #16 BCS Badkey LDA &AE BNE Badkey \MSB must=0 JSR Keyout.done JMP Alldone.All LDX #0.A1 STX &AD JSR Keyout LDX &AD INX CPX #16 BCC A1 \ Print out Key status JSR Printmsg $EQUB 13 $EQUS "f:" $EQUB 0 LDA #225 JSR Ftype \Get Normal fcn key status JSR Printmsg $EQUS "Sf:" $EQUB 0 LDA #226 JSR Ftype \Get Shifted Fkeys JSR Printmsg $EQUS "Cf:" $EQUB 0 LDA #227 JSR Ftype \Get Ctrl Fkeys JSR Printmsg $EQUS "SCf:" $EQUB 0 LDA #228 JSR Ftype \Get Shifted/Ctrl Fkeys JSR OSNEWL JMP Alldone.Ftype LDX #0 LDY #&FF JSR OSBYTE JSR FT0.Tab LDA #134 JSR OSBYTE \Get POS SEC TXA.t1 SBC #10 \Tab to next of 10,20,30.. BCS t1 TAX.t2 JSR Space1 INX BNE t2 RTS.FT0 TXA \X=result BNE FT1.Off JSR Printmsg $EQUS "off" $EQUB 0 RTS.FT1 CPX #1 BNE Asci.User JSR Printmsg $EQUS "user" $EQUB 0 RTS.Asci LDA #"&" JSR OSWRCH TXA JMP Hex_asci.Keyout JSR Printmsg $EQUS "*KEY " $EQUB 0 LDA &AD STA &AE LDA #0 STA &AF JSR OUTIAC2 \Print key#in decimal JSR Space1.NotMaster LDX &AD \Print Key def for No in AD LDA &B00,X  \Start offset STA &AE LDA #&FF STA &AF \Set max finish offset LDX #15 \Find the next lowest start offset as this will be finish for this key.L1 CPX &AD BEQ L2 \Dont compare with self LDA &B00,X CMP &AE BCC L2 \Less than start CMP &AF BCS L2 \Not the lowest STA &AF.L2 DEX BPL L1 LDY &AE CPY &AF BEQ Nokey.L3 LDA &B01,Y BPL L4 PHA LDA #"|" JSR OSWRCH LDA #"!" JSR OSWRCH PLA AND #&7F.L4 CMP #32 BCC L4b CMP #&7F \=|? BEQ L4b CMP #&22 \Quote BEQ L4a \=|" CMP #&7C \bar=|| BNE L5 \Normal ascii.L4a EOR #&40.L4b PHA LDA #"|" JSR OSWRCH PLA EOR #&40.L5 JSR OSWRCH INY CPY &AF BCC L3.Nokey JMP OSNEWL$END