$START\----------------------------------------\ BASMOD2b                              -\ Basic Replacement Module              -\ SETVAR, FINDVAR                       - \ SETPROC, FINDPROC, WARMSTART, CHKBASIC-\ Warmstart modded 1/87 for OSHWM<>PAGE\----------------------------------------\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.'FINDPROC LDY#1 LDA(&37),Y LDY#&F6 \PROC offset in cat' page CMP#&F2 \PROC token? BEQ Z946F LDY#&F8 \FN offset BNE Z946F.'FINDVAR \Find Variable in catalogue whose name is at (37),1, length in 39 LDY#1 LDA(&37),Y \First chr of name ASL A TAY.Z946F LDA &400,Y STA&3A LDA&401,Y STA &3B.FV1 LDA&3B BEQ FV3 \link address=0, not found LDY#2.FV2 LDA(&3A),Y \Name byte BNE FV4 \Still name chr DEY CPY &39 \Length BNE FV5 \Next entry INY TYA ADC &3A \C=1 STA &2A \Set IAC=Addr of Variable LDA &3B ADC#0 STA&2B.FV3 RTS \Z=1 if not found.FV4 CMP(&37),Y \Name chr BNE FV5 \Wrong entry INY BNE FV2 \Check next chr.FV5 LDY#0 LDA(&3A),Y \Link addr lsb PHA INY LDA(&3A),Y \msb STA &3B PLA STA &3A JMP FV1 \Check next entry\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.'SETPROC \Create new variable or PROC/FN on catalogue LDY#1 LDA(&37),Y TAX LDA#&F6 CPX#&F2 BEQ Z9501 LDA#&F8 BNE Z9501.'SETVAR LDY#1 LDA(&37),Y ASL A.Z9501 STA&3A LDA#4 STA&3B.Z9507 LDA(&3A),Y BEQ Z9516 \End of chain TAX DEY LDA(&3A),Y STA&3A STX&3B INY BPL Z9507.Z9516 LDA&3 \Vartop STA(&3A),Y LDA&2 DEY STA(&3A),Y TYA \=0 INY STA(2),Y CPY&39 BEQ Z9558 \Single chr name.Z9527 INY LDA(&37),Y STA(2),Y CPY&39 BNE Z9527.Z9558 RTS\******************************************************.'WARMSTART \Return to BASIC or EDITOR PHA \B=BASIC, ^E=Editor LDA#126 JSR OSBYTE \Ack any Escape\ SET OSHWM TO PAGE incase PAGE<>OSHWM, added 1/87\ Both BASIC & BASIC EDITOR use OSWHM for PAGE LDA &18 \PAGE STA &244 \OSHWM PLA CMP #5 \^E  BNE gobasic LDX #Editor MOD 256 LDY #Editor / 256 JMP OSCLI.gobasic LDX#0.WS1 LDY Warm,X BEQ WS2 INX TXA PHA LDA#138 LDX#0 \Keybd buffer JSR OSBYTE \Insert chr PLA TAX BNE WS1.WS2 LDX #Basic MOD 256 LDY #Basic / 256 JMP OSCLI.Warm $EQUS "OLD" $EQUB 13 $EQUB 0.Basic $EQUS "BASIC" $EQUB 13.Editor $EQUS "BE" $EQUB 13\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ CHECK IF CURRENT LANGUAGE ROM IS BASIC \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\.'CheckBASIC TXA PHA TYA PHA LDA#252 LDX#0 LDY#&FF JSR OSBYTE \Read Current Language rom no. STX &100 LDA #187 LDX#0 LDY#&FF JSR OSBYTE \Read BASIC Rom no. CPX &100 BEQ Bok JSR Errorexit $EQUB &D7 $EQUS "Not BASIC?" $EQUB 0.Bok PLA TAY PLA TAX RTS \Only returns if BASIC$END