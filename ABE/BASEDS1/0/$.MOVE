.P=&A8 \Page 0 use...Source=P.Destin=P+2.Extent=P+4$START \ ******************************* \ * MOVE Routine for 16K Rom IV * \ * Syntax-                     * \ * MOVE <page> for BASIC only  * \ * MOVE<destin><source><finish>* \ * or                          * \ * MOVE<destin><source><+extnt>* \ *******************************.'MOVECMND \Set defaults to move BASIC from PAGE to E00 LDA &18 \PAGE STA Source+1 LDA #&E STA Destin+1 LDA &13 \TOP MSB SEC SBC &18 \TOP-PAGE STA Extent+1 LDA &12 \TOP LSB STA Extent LDA #0 STA Source STA Destin JSR Nextoscl BEQ Move4 \CR, no addr given, use defaults JSR HEXBIN \Get destination address BCS Aok.'Badaddr JSR Errorexit $EQUB 28 \Err#, Bad hex $EQUS "Bad Address" $EQUB 0.Aok PHP LDA &AF STA Destin+1 LDA &AE \LSB, for basic leave =0 PLP BEQ Move4 \CR, no source addr given, Move basic STA Destin JSR HEXBIN \Get source address BCC Badaddr BEQ Badaddr \Extent must be given PHA LDA &AF STA Source+1 LDA &AE STA Source PLA CMP #"+" \Extent or addr? PHP BNE L1 JSR Skposcl \Move past +.L1 JSR HEXBIN \Get ext addr BCC Badaddr LDX &AE LDA &AF \Result PLP BEQ Ext \+ \Finish addr given, calculate extent SEC TXA SBC Source TAX LDA &AF SBC Source+1.Ext STA Extent+1 \MSB STX Extent \LSB JMP Move5.Move4 \Basic move \Check new TOP < HIMEM and Update BASIC pointers JSR CheckBASIC \No return if not BASIC LDA Destin+1 CLC ADC Extent+1 CMP &7 \HIMEM MSB BCS Badaddr LDA Source+1 SEC SBC Destin+1 \Move up =-ve, Down =+ve TAX.Reset DEC &13 \TOP DEC &01 \LOMEM DEC &18 \PAGE DEX BNE Reset.Move5 JSR Blockmove JMP Alldone \**********************************.'Blockmove LDY #0 \Zero index LDX Extent SEC \Test direction of move LDA Source SBC Destin STA &AF LDA Source+1 SBC Destin+1 ORA &AF BEQ BRET \No move, SILLY! BCC Up \C=0, Dest>Source.Down \Start at bottom and work up INC Extent+1 \Dummy for later DEC TXA \Partial block? BEQ D2 \No partial.Loop1 LDA (Source),Y \Move byte STA (Destin),Y INY BNE D1 INC Source+1 INC Destin+1.D1 DEX BNE Loop1.D2 DEC Extent+1 BNE Loop1.BRET RTS \All moved.Up \Start at last byte and work down TXA \LSB of extent ADC Source \C=0 STA Source LDA Extent+1 ADC Source+1 STA Source+1 \Change S&D to point to last byte-255 DEC Source+1 TXA CLC ADC Destin STA Destin LDA Extent+1 ADC Destin+1 STA Destin+1 DEC Destin+1 DEY \=255 INC Extent+1 \Dummy for later DEC TXA \Partial block ? BEQ U2 \No.Loop2 LDA (Source),Y \Move byte STA (Destin),Y TYA BNE U1 \Not 0 yet DEC Source+1 DEC Destin+1.U1 DEY DEX BNE Loop2.U2 DEC Extent+1 BNE Loop2 RTS$END