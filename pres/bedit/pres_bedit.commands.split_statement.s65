split_statement_edit_mode_command:	
		JSR	rstrip_detokenized_line
		CPY	#0
		BEQ	loc_9801
		LDA	unk_11
		BEQ	loc_9804

loc_9801:				
		JMP	beep

loc_9804:				
		LDA	cursor_offset	; offset of cursor in detokenized buffer
		CMP	#1
		BEQ	loc_9801
		CMP	byte_400
		BEQ	loc_9811
		BCS	loc_9801

loc_9811:				
		LDY	#0

loc_9813:				
		LDA	$400,Y
		STA	$700,Y
		DEY
		BNE	loc_9813
		JSR	sub_A8C0
		LDY	#0

loc_9821:				
		LDA	$700,Y
		STA	$400,Y
		DEY
		BNE	loc_9821
		JSR	sub_9968
		PHA
		CMP	#0
		BNE	loc_9835
		JMP	loc_98DB

loc_9835:				
		LDA	byte_400
		CMP	#-5
		BNE	loc_9840

loc_983C:				
		PLA
		JMP	renumber_edit_mode_command

loc_9840:				
		LDY	byte_400

loc_9843:				
		LDA	$400,Y
		CMP	#7
		BEQ	loc_983C
		DEY
		BNE	loc_9843
		LDY	byte_400

loc_9850:				
		LDA	$400,Y
		STA	$401,Y
		CPY	cursor_offset	; offset of cursor in detokenized buffer
		BEQ	loc_985D
		DEY
		BNE	loc_9850

loc_985D:				
		LDA	#7
		STA	$400,Y
		INC	byte_400
		LDA	#1
		STA	byte_6B3
		LDA	#0
		STA	byte_6A7
		JSR	sub_A8C0
		INC	byte_6A7
		LDA	#-1
		STA	unk_6AD
		JSR	sub_8492
		LDA	unk_6AD
		CMP	#-1
		BEQ	loc_9892
		JSR	sub_999A

loc_9887:				
		LDA	unk_6AD
		LDX	#0
		STX	unk_6AD
		JMP	loc_859D

loc_9892:				
		JSR	detokenize_one_line
		LDA	unk_6AD
		CMP	#-1
		BEQ	loc_98B5
		JSR	sub_999A
		LDA	#-1
		STA	unk_6AD
		JSR	detokenize_one_line
		LDA	unk_6AD
		CMP	#-1
		BNE	loc_9887
		INC	unk_6AD
		PLA
		JMP	loc_967A

loc_98B5:				
		INC	unk_6AD
		LDY	byte_400

loc_98BB:				
		LDA	$400,Y
		CMP	#7
		BEQ	loc_98C5
		DEY
		BNE	loc_98BB

loc_98C5:				
		STY	cursor_offset	; offset of cursor in detokenized buffer

loc_98C7:				
		LDA	$401,Y
		STA	$400,Y
		INY
		CPY	byte_400
		BNE	loc_98C7
		LDA	#$20 ; ' '
		STA	$400,Y
		DEC	byte_400

loc_98DB:				
		PLA
		STA	byte_36
		CLC
		LDA	#0
		ADC	cursor_offset	; offset of cursor in detokenized buffer
		STA	byte_C
		LDA	#4
		ADC	#0
		STA	byte_D
		LDA	#1
		STA	byte_E
		LDA	#7
		STA	byte_F
		SEC
		LDA	byte_400
		SBC	cursor_offset	; offset of cursor in detokenized buffer
		TAY
		INY
		STY	unk_700
		LDX	#0
		JSR	memmove		; move (maybe overlapping) memory regions.
					;
					; Entry:
					; (byte_C) points to src
					; (byte_E) points to dest
					; X is MSB of size
					; Y is LSB of size
		LDX	cursor_offset	; offset of cursor in detokenized buffer
		DEX
		STX	byte_400
		LDA	#1
		STA	byte_6B3
		JSR	sub_A8C0
		JSR	get_line_height	; get height of	current	line
					;
					; Entry:
					; ?byte_400 = line length
					;
					; Exit:
					; X = line height
		STX	byte_35
		LDA	#0
		STA	byte_C
		LDA	#7
		STA	byte_D
		LDA	#0
		STA	byte_E
		LDA	#4
		STA	byte_F
		LDY	unk_700
		INY
		LDX	#0
		JSR	memmove		; move (maybe overlapping) memory regions.
					;
					; Entry:
					; (byte_C) points to src
					; (byte_E) points to dest
					; X is MSB of size
					; Y is LSB of size

loc_992F:				
		LDX	current_line_no_lsb
		LDY	current_line_no_msb
		INC	current_line_no_msb
		BNE	loc_9939
		INC	current_line_no_lsb

loc_9939:				
		LDA	current_line_no_lsb
		PHA
		LDA	current_line_no_msb
		PHA
		TXA
		PHA
		TYA
		PHA
		LDA	byte_36
		PHA
		LDX	byte_35
		JMP	loc_AFBB

repeat_edit_mode_command:		
		JSR	sub_995B
		STA	byte_36
		JSR	detokenize_one_line
		JSR	get_line_height	; get height of	current	line
					;
					; Entry:
					; ?byte_400 = line length
					;
					; Exit:
					; X = line height
		STX	byte_35
		JMP	loc_992F
; End of function repeat_edit_mode_command

sub_995B:				
		JSR	sub_9968
		PHA
		CMP	#0
		BEQ	loc_9966
		JSR	sub_8492

loc_9966:				
		PLA
		RTS
; End of function sub_995B

sub_9968:				
		JSR	is_program_empty ; sets	C if no	program
		BCS	loc_9997
		LDY	#3
		CLC
		LDA	(byte_2B),Y
		ADC	byte_2B
		STA	byte_C
		LDA	byte_2C
		ADC	#0
		STA	byte_D
		LDX	current_line_no_lsb
		LDY	current_line_no_msb
		INY
		BNE	loc_9986
		INX
		BMI	loc_9993

loc_9986:				
		TYA
		LDY	#2
		CMP	(byte_C),Y
		BNE	loc_9997
		DEY
		TXA
		CMP	(byte_C),Y
		BNE	loc_9997

loc_9993:				
		LDA	#1
		BNE	locret_9999

loc_9997:				
		LDA	#0

locret_9999:				
		RTS
; End of function sub_9968

sub_999A:				
		JSR	find_program
		LDY	#4

loc_999F:				
		LDA	($2B),Y
		CMP	#7
		BEQ	loc_99A8
		INY
		BNE	loc_999F

loc_99A8:				
		TYA
		CLC
		ADC	byte_2B
		STA	byte_C
		STA	byte_E
		LDA	byte_2C
		ADC	#0
		STA	byte_D
		STA	byte_F
		INC	byte_C
		BNE	loc_99BE
		INC	byte_D

loc_99BE:				
		SEC
		LDA	TOP
		SBC	byte_C
		TAY
		LDA	TOP+1
		SBC	byte_D
		TAX
		JSR	memmove		; move (maybe overlapping) memory regions.
					;
					; Entry:
					; (byte_C) points to src
					; (byte_E) points to dest
					; X is MSB of size
					; Y is LSB of size
		LDY	#3
		LDA	($2B),Y
		SEC
		SBC	#1
		STA	($2B),Y
		RTS
; End of function sub_999A
